name: dbt prod

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'

jobs:
  run:
    runs-on: ubuntu-20.04

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: install requirements
        run: pip install -q -r requirements.txt

      - name: install datafold-sdk
        run: pip install -q datafold-sdk

      - name: dbt deps
        run: dbt deps

      - name: Grab sources.json from S3
        run: |
          aws s3 cp {s3 url} ./sources.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets }}
          AWS_REGION: us-west-2

      - name: dbt source freshness
        run: dbt source freshness --profiles-dir ./
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets }}
          SNOWFLAKE_USER: ${{ secrets }}
          SNOWFLAKE_PASSWORD: ${{ secrets }}
          SNOWFLAKE_ROLE: ${{ secrets }}
          SNOWFLAKE_SCHEMA: ${{ secrets }}

      - name: dbt run
        run: dbt run --select source_status:fresher+ --state ./ --exclude config.materialized:view tag:static --profiles-dir ./
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets }}
          SNOWFLAKE_USER: ${{ secrets }}
          SNOWFLAKE_PASSWORD: ${{ secrets }}
          SNOWFLAKE_ROLE: ${{ secrets }}
          SNOWFLAKE_SCHEMA: ${{ secrets }}

      - name: dbt test
        run: dbt test --select source_status:fresher+ --state ./ --exclude tag:static --profiles-dir ./
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets }}
          SNOWFLAKE_USER: ${{ secrets }}
          SNOWFLAKE_PASSWORD: ${{ secrets }}
          SNOWFLAKE_ROLE: ${{ secrets }}
          SNOWFLAKE_SCHEMA: ${{ secrets }}

      - name: submit artifacts to datafold
        run: |
          set -ex
          datafold dbt upload --ci-config-id {config_id} --run-type ${DATAFOLD_RUN_TYPE} --commit-sha ${GIT_SHA}
        env:
          DATAFOLD_APIKEY: ${{ secrets.DATAFOLD_APIKEY }}
          DATAFOLD_RUN_TYPE: "${{ 'production' }}"
          GIT_SHA: "${{ github.sha }}"

      - name: Upload manifest to S3
        run: |
          aws s3 cp target/manifest.json {s3 url}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2

      - name: Upload sources.json to S3
        run: |
          aws s3 cp target/sources.json {s3 url}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2

      - name: Announce success on slack
        if: ${{ success() }}
        run: |
          curl ${{ secrets.SLACK_DBT_NOTIFICATION_WEBHOOK_URL }} \
            --request POST \
            --header 'Content-type: application/json' \
            --data \
              '{
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.workflow }} completed"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "${{ github.workflow }} succeeded :white_check_mark:"
                      }
                    }
                  ]
              }'
      - name: Announce failure on slack
        if: ${{ failure() }}
        run: |
          curl ${{ secrets.SLACK_DBT_NOTIFICATION_WEBHOOK_URL }} \
            --request POST \
            --header 'Content-type: application/json' \
            --data \
              '{
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": "${{ github.workflow }} completed"
                      }
                    },
                    {
                      "type": "section",
                      "text": {
                          "type": "mrkdwn",
                          "text": "${{ github.workflow }} failed :rotating_light:\n<@slack_user_id>"
                      }
                    }
                  ]
              }'
